# #######################################
#
# HAL file for BeagleBone + TCT paralell port cape with 5 steppers and 3D printer board
#
# Derived from example hm2-stepper config
#
# ########################################

# start haltalk server
loadusr -W haltalk

# ###################################
# Core EMC/HAL Loads
# ###################################

# kinematics
loadrt trivkins

# motion controller, get name and thread periods from ini file
loadrt [EMCMOT]EMCMOT servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=5 num_aio=56 num_dio=56 #[TRAJ]AXES

# THREADS
#loadrt threads name1=run-thread period1=50170000

# Gantry component for Z Axis
loadrt gantry names=gantry.z personality=2

# load low-level drivers
loadrt hal_bb_gpio output_pins=807,819,826,926 input_pins=941
loadrt [PRUCONF](DRIVER) prucode=[PRUCONF](PRUBIN) [PRUCONF](CONFIG) halname=hpg

# other components
loadrt pid names=pid.e0-temp,pid.hbp-temp
loadrt limit1 names=limit1.e0-heater,limit1.hbp-heater
loadrt scale names=scale.f0,scale.f1,scale.f2,scale.f3
loadrt led_dim names=led-dim.l0-r,led-dim.l0-g,led-dim.l0-b,led-dim.l0-w
loadrt charge_pump
loadrt thermistor_check names=thermistor-check.e0,thermistor-check.hbp
loadrt not names=not.e0-temp-range,not.hbp-temp-range
loadrt wcomp names=wcomp.e0-temp-range,wcomp.hbp-temp-range,wcomp.e0-temp-limit,wcomp.hbp-temp-limit
loadrt lowpass names=lowpass.e0-temp-range,lowpass.hbp-temp-range
loadrt sum2 names=sum2.e0-temp-range-neg,sum2.e0-temp-range-pos,sum2.hbp-temp-range-neg,sum2.hbp-temp-range-pos
loadrt and2 names=and2.probe,and2.e0-no-error,and2.hbp-no-error
loadrt mux2 names=mux2.exp0-pwm
#loadrt in2io names=in2io.e0-temp-set,in2io.hbp-temp-set,in2io.f0-set,in2io.f1-set,in2io.f2-set,in2io.f3-set,in2io.l0-r,in2io.l0-g,in2io.l0-b,in2io.l0-w,in2io.probe-offset-x,in2io.probe-offset-y,in2io.probe-offset-z,in2io.p0-x,in2io.p0-y,in2io.p1-x,in2io.p1-y,in2io.p2-x,in2io.p2-y,in2io.p3-x,in2io.p3-y
loadrt in2io personality=51 names=in2io-motion
loadrt logic names=estopchain personality=0x108 # and 8 inputs
loadrt comp names=comp.exp0-temp,comp.hbp-hot,comp.e0-active,comp.hbp-active
loadrt select8 names=select8.extruder
loadrt watchdog num_inputs=3
loadrt mux_generic config=bb4 # mux-gen.00 for probe
loadrt conv_float_u32 names=f2u.probe-sel

addf   hpg.capture-position                 servo-thread
addf   bb_gpio.read                         servo-thread
addf   gantry.z.read                        servo-thread
addf   motion-command-handler               servo-thread
addf   f2u.probe-sel                        servo-thread
addf   mux-gen.00                           servo-thread
addf   and2.probe                           servo-thread
addf   motion-controller                    servo-thread
addf   in2io-motion                         servo-thread
# HBP
addf   sum2.hbp-temp-range-neg              servo-thread
addf   sum2.hbp-temp-range-pos              servo-thread
addf   lowpass.hbp-temp-range               servo-thread
addf   wcomp.hbp-temp-range                 servo-thread
addf   not.hbp-temp-range                   servo-thread
addf   wcomp.hbp-temp-limit                 servo-thread
addf   pid.hbp-temp.do-pid-calcs            servo-thread
addf   limit1.hbp-heater                    servo-thread
addf   and2.hbp-no-error                    servo-thread
addf   comp.hbp-active                      servo-thread
# E0
addf   pid.e0-temp.do-pid-calcs             servo-thread
addf   limit1.e0-heater                     servo-thread
addf   sum2.e0-temp-range-neg               servo-thread
addf   sum2.e0-temp-range-pos               servo-thread
addf   lowpass.e0-temp-range                servo-thread
addf   wcomp.e0-temp-range                  servo-thread
addf   not.e0-temp-range                    servo-thread
addf   wcomp.e0-temp-limit                  servo-thread
addf   and2.e0-no-error                     servo-thread
addf   comp.e0-active                       servo-thread
# F0
addf   scale.f0                             servo-thread
# F1
addf   scale.f1                             servo-thread
# F2
addf   scale.f2                             servo-thread
# F3
addf   scale.f3                             servo-thread
# L0
addf   led-dim.l0-r                         servo-thread
addf   led-dim.l0-g                         servo-thread
addf   led-dim.l0-b                         servo-thread
addf   led-dim.l0-w                         servo-thread

addf   comp.exp0-temp                       servo-thread
addf   mux2.exp0-pwm                        servo-thread
addf   select8.extruder                     servo-thread
addf   comp.hbp-hot                         servo-thread

# Estop chain
addf   thermistor-check.e0                  servo-thread
addf   thermistor-check.hbp                 servo-thread
addf   watchdog.set-timeouts                servo-thread
addf   watchdog.process                     servo-thread
addf   estopchain                           servo-thread

# Update functions
addf   gantry.z.write                       servo-thread
addf   hpg.update                           servo-thread
addf   bb_gpio.write                        servo-thread


#addf   charge-pump                         run-thread


# user components
newsig gpio-ok bit
newsig pwm-ok bit
newsig temp-ok bit
newsig gpio-watchdog bit
newsig pwm-watchdog bit
newsig temp-watchdog bit

# Python user-mode HAL module to interface with an I2C gpio extender
loadusr -Wn i2c-gpio ./python/Gpio.py --name i2c-gpio --bus_id 2 --address 32 --interval 0.05 --delay 2.5 --input_pins A00,A01,A02,A03,A04,A05,A06,A07,B06,B07 --output_pins B00,B01,B02,B03,B04,B05

# Python user-mode HAL module to interface with an I2C PWM generator
loadusr -Wn i2c-pwm ./python/Pwm.py --name i2c-pwm --bus_id 2 --address 67 --interval 0.1 --delay 2.6

# Python user-mode HAL module to interface with an I2C ADC and convert it to temperature
loadusr -Wn i2c-temp ./python/Temperature.py --name i2c-temp --bus_id 2 --address 72 --interval 0.05 --delay 2.7 --filter_size 10 --channels 00:[HBP]THERMISTOR,01:[EXTRUDER_0]THERMISTOR,02:semitec_103GT_2,03:semitec_103GT_2,04:semitec_103GT_2,05:none,06:none,07:none

# Python user-mode HAL module for storing values
loadusr -Wn storage ./python/Storage.py -n storage -f storage.ini -a

net gpio-ok <= i2c-gpio.no-error
net pwm-ok <= i2c-pwm.no-error
net temp-ok <= i2c-temp.no-error

net gpio-watchdog <= i2c-gpio.watchdog
net pwm-watchdog <= i2c-pwm.watchdog
net temp-watchdog <= i2c-temp.watchdog

# ###################################
# UI definition and defaults
# ###################################

newcomp fdm-e0 timer=100
newpin  fdm-e0 fdm-e0.temp.meas      float in
newpin  fdm-e0 fdm-e0.temp.set       float io
newpin  fdm-e0 fdm-e0.temp.limit.min float in
newpin  fdm-e0 fdm-e0.temp.limit.max float in
newpin  fdm-e0 fdm-e0.temp.in-range  bit   in
newpin  fdm-e0 fdm-e0.no-error       bit   in
newpin  fdm-e0 fdm-e0.active         bit   in
ready   fdm-e0

newcomp fdm-hbp timer=100
newpin  fdm-hbp fdm-hbp.temp.meas      float in
newpin  fdm-hbp fdm-hbp.temp.set       float io
newpin  fdm-hbp fdm-hbp.temp.limit.min float in
newpin  fdm-hbp fdm-hbp.temp.limit.max float in
newpin  fdm-hbp fdm-hbp.temp.in-range  bit   in
newpin  fdm-hbp fdm-hbp.no-error       bit   in
newpin  fdm-hbp fdm-hbp.active         bit   in
ready   fdm-hbp

newcomp fdm-f0 timer=100
newpin fdm-f0 fdm-f0.set float io
ready fdm-f0

newcomp fdm-f1 timer=100
newpin fdm-f1 fdm-f1.set float io
ready fdm-f1

newcomp fdm-f2 timer=100
newpin fdm-f2 fdm-f2.set float io
ready fdm-f2

newcomp fdm-f3 timer=100
newpin fdm-f3 fdm-f3.set float io
ready fdm-f3

newcomp fdm-l0 timer=100
newpin fdm-l0 fdm-l0.r float io
newpin fdm-l0 fdm-l0.g float io
newpin fdm-l0 fdm-l0.b float io
newpin fdm-l0 fdm-l0.w float io
ready  fdm-l0

# wait the halcmd script until the UI has created the remote component 'pidctrl':
# waitexists pidctrl

# OR preconfigure the remote component like so
# in this case no waiting required
# pin count, name, type, direction must match exactly what
# is in the GUI
newcomp pidctrl timer=100
newpin pidctrl pidctrl.Pgain              float io
newpin pidctrl pidctrl.Igain              float io
newpin pidctrl pidctrl.Dgain              float io
newpin pidctrl pidctrl.maxerrorI          float io
newpin pidctrl pidctrl.bias               float io
newpin pidctrl pidctrl.enable             bit   out
newpin pidctrl pidctrl.command            float out
newpin pidctrl pidctrl.feedback           float in
newpin pidctrl pidctrl.output             float in
ready  pidctrl

#setp pidctrl.enable    FALSE
#setp pidctrl.Pgain     0.02
#setp pidctrl.Igain     0.00003
#setp pidctrl.Dgain     0.0001
#setp pidctrl.maxerrorI 0.2
#setp pidctrl.bias      0.09

# at this stage, the component and its pins exist
# and can be linked to

# ############1##########################################
# Axis-of-motion Specific Configs (not the GUI)
# ######################################################


# ################
# X [0] Axis
# ################

# axis enable chain
newsig emcmot.00.enable bit
sets emcmot.00.enable FALSE

net emcmot.00.enable <= axis.0.amp-enable-out 
net emcmot.00.enable => hpg.stepgen.00.enable


# position command and feedback
net emcmot.00.pos-cmd <= axis.0.motor-pos-cmd
net emcmot.00.pos-cmd => hpg.stepgen.00.position-cmd

net motor.00.pos-fb <= hpg.stepgen.00.position-fb
net motor.00.pos-fb => axis.0.motor-pos-fb


# timing parameters
setp hpg.stepgen.00.dirsetup        [AXIS_0]DIRSETUP
setp hpg.stepgen.00.dirhold         [AXIS_0]DIRHOLD

setp hpg.stepgen.00.steplen         [AXIS_0]STEPLEN
setp hpg.stepgen.00.stepspace       [AXIS_0]STEPSPACE

setp hpg.stepgen.00.position-scale  [AXIS_0]SCALE

setp hpg.stepgen.00.maxvel          [AXIS_0]STEPGEN_MAX_VEL
setp hpg.stepgen.00.maxaccel        [AXIS_0]STEPGEN_MAX_ACC

#setp hpg.stepgen.00.step_type       0
setp hpg.stepgen.00.steppin         [AXIS_0]STEPPIN
setp hpg.stepgen.00.dirpin          [AXIS_0]DIRPIN


# ################
# Y [1] Axis
# ################

# axis enable chain
newsig emcmot.01.enable bit
sets emcmot.01.enable FALSE

net emcmot.01.enable <= axis.1.amp-enable-out 
net emcmot.01.enable => hpg.stepgen.01.enable


# position command and feedback
net emcmot.01.pos-cmd <= axis.1.motor-pos-cmd
net emcmot.01.pos-cmd => hpg.stepgen.01.position-cmd

net motor.01.pos-fb <= hpg.stepgen.01.position-fb
net motor.01.pos-fb => axis.1.motor-pos-fb


# timing parameters
setp hpg.stepgen.01.dirsetup        [AXIS_1]DIRSETUP
setp hpg.stepgen.01.dirhold         [AXIS_1]DIRHOLD

setp hpg.stepgen.01.steplen         [AXIS_1]STEPLEN
setp hpg.stepgen.01.stepspace       [AXIS_1]STEPSPACE

setp hpg.stepgen.01.position-scale  [AXIS_1]SCALE

setp hpg.stepgen.01.maxvel          [AXIS_1]STEPGEN_MAX_VEL
setp hpg.stepgen.01.maxaccel        [AXIS_1]STEPGEN_MAX_ACC

#setp hpg.stepgen.01.step_type       0
setp hpg.stepgen.01.steppin         [AXIS_1]STEPPIN
setp hpg.stepgen.01.dirpin          [AXIS_1]DIRPIN


# ################
# Z [2] Axis Right - Gantry
# ################

# axis enable chain
newsig emcmot.02.enable bit
sets emcmot.02.enable FALSE

net emcmot.02.enable <= axis.2.amp-enable-out 
net emcmot.02.enable => hpg.stepgen.02.enable

setp gantry.z.search-vel            [AXIS_2]HOME_SEARCH_VEL

# position command and feedback
net emcmot.02.pos-cmd <= axis.2.motor-pos-cmd
net emcmot.02.pos-cmd => gantry.z.position-cmd
net motor.02.pos-cmd <= gantry.z.joint.00.pos-cmd
net motor.02.pos-cmd => hpg.stepgen.02.position-cmd

net emcmot.02.pos-fb <= gantry.z.position-fb
net emcmot.02.pos-fb => axis.2.motor-pos-fb
net motor.02.pos-fb <= hpg.stepgen.02.position-fb
net motor.02.pos-fb => gantry.z.joint.00.pos-fb

# timing parameters
setp hpg.stepgen.02.dirsetup        [AXIS_2]DIRSETUP
setp hpg.stepgen.02.dirhold         [AXIS_2]DIRHOLD

setp hpg.stepgen.02.steplen         [AXIS_2]STEPLEN
setp hpg.stepgen.02.stepspace       [AXIS_2]STEPSPACE

setp hpg.stepgen.02.position-scale  [AXIS_2]SCALE

setp hpg.stepgen.02.maxvel          [AXIS_2]STEPGEN_MAX_VEL
setp hpg.stepgen.02.maxaccel        [AXIS_2]STEPGEN_MAX_ACC

#setp hpg.stepgen.02.step_type       0
setp hpg.stepgen.02.steppin         [AXIS_2]STEPPIN_RIGHT
setp hpg.stepgen.02.dirpin          [AXIS_2]DIRPIN_RIGHT


# ################
# Z [3] Axis Left - Gantry
# ################

# axis enable chain
#newsig emcmot.03.enable bit
#sets emcmot.03.enable FALSE

#net emcmot.03.enable <= axis.2.amp-enable-out 
net emcmot.02.enable => hpg.stepgen.03.enable

# position command and feedback
net motor.03.pos-cmd <= gantry.z.joint.01.pos-cmd
net motor.03.pos-cmd => hpg.stepgen.03.position-cmd

net motor.03.pos-fb <= hpg.stepgen.03.position-fb
net motor.03.pos-fb => gantry.z.joint.01.pos-fb

# timing parameters
setp hpg.stepgen.03.dirsetup        [AXIS_2]DIRSETUP
setp hpg.stepgen.03.dirhold         [AXIS_2]DIRHOLD

setp hpg.stepgen.03.steplen         [AXIS_2]STEPLEN
setp hpg.stepgen.03.stepspace       [AXIS_2]STEPSPACE

setp hpg.stepgen.03.position-scale  [AXIS_2]SCALE

setp hpg.stepgen.03.maxvel          [AXIS_2]STEPGEN_MAX_VEL
setp hpg.stepgen.03.maxaccel        [AXIS_2]STEPGEN_MAX_ACC

#setp hpg.stepgen.03.step_type       0
setp hpg.stepgen.03.steppin         [AXIS_2]STEPPIN_LEFT
setp hpg.stepgen.03.dirpin          [AXIS_2]DIRPIN_LEFT


# ################
# A [4] Axis (Extruder) - Velocity control
# ################

# axis enable chain
newsig emcmot.03.enable bit
sets emcmot.03.enable FALSE

net emcmot.03.enable <= axis.3.amp-enable-out 
net emcmot.03.enable => hpg.stepgen.04.enable

# position command and feedback
net emcmot.03.pos-cmd <= axis.3.motor-pos-cmd
net emcmot.03.pos-cmd => hpg.stepgen.04.position-cmd

net motor.04.pos-fb <= hpg.stepgen.04.position-fb
net motor.04.pos-fb => axis.3.motor-pos-fb

# timing parameters
setp hpg.stepgen.04.dirsetup        [AXIS_3]DIRSETUP
setp hpg.stepgen.04.dirhold         [AXIS_3]DIRHOLD

setp hpg.stepgen.04.steplen         [AXIS_3]STEPLEN
setp hpg.stepgen.04.stepspace       [AXIS_3]STEPSPACE

setp hpg.stepgen.04.position-scale  [AXIS_3]SCALE

setp hpg.stepgen.04.maxvel          [AXIS_3]STEPGEN_MAX_VEL
setp hpg.stepgen.04.maxaccel        [AXIS_3]STEPGEN_MAX_ACC

#setp hpg.stepgen.04.step_type       0
setp hpg.stepgen.04.steppin         [AXIS_3]STEPPIN
setp hpg.stepgen.04.dirpin          [AXIS_3]DIRPIN


# ##################################################
# Standard I/O - EStop, Enables, Limit Switches, Etc
# ##################################################

# Create estop signal chain
# Drive software estop to hardware
newsig estop-user bit
newsig estop-out bit

net estop-user <= iocontrol.0.user-enable-out

# Monitor estop input from hardware
net estop-loop bb_gpio.p9.in-41 => iocontrol.0.emc-enable-in
setp bb_gpio.p9.in-41.invert 1

# create signals for tool loading loopback
net tool-prep-loop iocontrol.0.tool-prepare => iocontrol.0.tool-prepared
net tool-change-loop iocontrol.0.tool-change => iocontrol.0.tool-changed

# Axis enable signal (active low)
#net emcmot.00.enable => bb_gpio.p8.out-07
#setp bb_gpio.p8.out-07.invert 1

# Machine power
net emcmot.00.enable => bb_gpio.p8.out-07

# Tie machine power signal to the Parport Cape LED
# Feel free to tie any other signal you like to the LED
net emcmot.00.enable => bb_gpio.p8.out-26

# ################
# Limit Switches
# ################
newsig limit-x-home   bit
newsig limit-y-home   bit
newsig limit-zl-home  bit
newsig limit-zr-home  bit
newsig limit-x-min    bit
newsig limit-x-max    bit
newsig limit-y-min    bit
newsig limit-y-max    bit
newsig limit-z-min    bit
newsig limit-z-max    bit
newsig home-z         bit
newsig home-x         bit
newsig home-y         bit
newsig home-offset-zr float
newsig home-offset-zl float

net home-z      <= gantry.z.home

# Uncomment if you actually have limit switches setup
# You probably want to setup homing in the INI file, as well
net limit-x-home => axis.0.home-sw-in
#net limit-x-min => axis.0.neg-lim-sw-in
#net limit-x-max => axis.0.pos-lim-sw-in
net limit-y-home => axis.1.home-sw-in
#net limit-y-min => axis.1.neg-lim-sw-in
#net limit-y-max => axis.1.pos-lim-sw-in
#net limit-z-min => gantry.z.joint.00.home
net limit-zr-home => gantry.z.joint.00.home
net limit-zl-home => gantry.z.joint.01.home
net home-z        => axis.2.home-sw-in
#net limit-z-min => axis.2.home-sw-in
#net limit-z-min => axis.2.neg-lim-sw-ingggg
#net limit-z-max => axis.2.pos-lim-sw-in
net homing <= axis.2.homing
net homing => gantry.z.homing

net home-offset-zr => gantry.z.joint.00.home-offset
net home-offset-zl => gantry.z.joint.01.home-offset

# ################
# Probe
# ################
newsig probe.input              bit
newsig probe.enable             bit
newsig probe.signal             bit
newsig probe.muxed              bit
newsig probe.sel                u32
newsig probe.sel-f              float
newsig p0.x           float
newsig p0.y           float
newsig p1.x           float
newsig p1.y           float
newsig p2.x           float
newsig p2.y           float
newsig p3.x           float
newsig p3.y           float

net probe.sel-f => f2u.probe-sel.in
net probe.sel  <= f2u.probe-sel.out

net probe.sel    => mux-gen.00.sel-int
net probe.muxed  <= mux-gen.00.out-bit
net probe.signal => mux-gen.00.in-bit-00
net limit-x-home => mux-gen.00.in-bit-01
net limit-y-home => mux-gen.00.in-bit-02
net home-z       => mux-gen.00.in-bit-03

net probe.muxed  => and2.probe.in0
net probe.enable => and2.probe.in1
net probe.input  <= and2.probe.out
net probe.input  => motion.probe-input


# ##################################################
# Temperature Signals
# ##################################################

# Extruder 0 temperature control
# --------------------------------------------------------------------------
newsig e0.temp.set               float
newsig e0.temp.meas              float
newsig e0.temp.measl             float
newsig e0.temp.range.pos_error   float
newsig e0.temp.range.neg_error   float
newsig e0.temp.range.max         float
newsig e0.temp.range.min         float
newsig e0.temp.range.lowpassgain float
newsig e0.temp.in-range          bit
newsig e0.temp.pwm               float
newsig e0.temp.pwm.max           float
newsig e0.temp.limit.min         float
newsig e0.temp.limit.max         float
newsig e0.temp.in-limit          bit
newsig e0.therm-ok               bit
newsig e0.no-error               bit
newsig e0.active                 bit

# PID
net emcmot.00.enable  =>   pid.e0-temp.enable
net e0.temp.meas   => pid.e0-temp.feedback
net e0.temp.set    => pid.e0-temp.command
net e0.heater      <= pid.e0-temp.output
net e0.heater      => limit1.e0-heater.in
net e0.heaterl     <= limit1.e0-heater.out

# Limit heater PWM to positive values
# PWM mimics hm2 implementation, which generates output for negative values
setp limit1.e0-heater.min 0.0
setp limit1.e0-heater.max [EXTRUDER_0]PWM_MAX
net e0.temp.pwm.max => pid.e0-temp.maxoutput
sets e0.temp.pwm.max [EXTRUDER_0]PWM_MAX

# Temperature checking
net e0.temp.set              => sum2.e0-temp-range-pos.in0
net e0.temp.range.pos_error  => sum2.e0-temp-range-pos.in1
net e0.temp.set              => sum2.e0-temp-range-neg.in0
net e0.temp.range.neg_error  => sum2.e0-temp-range-neg.in1

# the lowpass filters the temperature to make sure it is stable when the wcomp is triggered
net e0.temp.range.lowpassgain => lowpass.e0-temp-range.gain
net e0.temp.meas              => lowpass.e0-temp-range.in
net e0.temp.measl             <= lowpass.e0-temp-range.out

net e0.temp.range.min sum2.e0-temp-range-neg.out => wcomp.e0-temp-range.min
net e0.temp.range.max sum2.e0-temp-range-pos.out => wcomp.e0-temp-range.max
net e0.temp.measl                => wcomp.e0-temp-range.in
#the output of wcomp.e0-temp-range will say if measured temperature is in range of set value
#this needs to be coupled to a digital input for M66 readout
net e0.temp.in-range <= wcomp.e0-temp-range.out

# limit the output temperature to prevent damage when thermistor is broken/removed
net e0.temp.limit.min         => wcomp.e0-temp-limit.min
net e0.temp.limit.max        => wcomp.e0-temp-limit.max
net e0.temp.meas              => wcomp.e0-temp-limit.in
net e0.temp.in-limit          <= wcomp.e0-temp-limit.out

# check the thermistor
net e0.temp.meas              => thermistor-check.e0.temp
net e0.temp.in-range          => not.e0-temp-range.in
net e0.temp.in-range_n        <= not.e0-temp-range.out
net e0.temp.in-range_n        => thermistor-check.e0.enable
net e0.heaterl                => thermistor-check.e0.pid
net e0.therm-ok               <= thermistor-check.e0.no-error

# no error chain
net e0.therm-ok => and2.e0-no-error.in0
net e0.temp.in-limit => and2.e0-no-error.in1
net e0.no-error <= and2.e0-no-error.out

setp comp.e0-active.in0 0.0001
setp comp.e0-active.hyst 0.0
net e0.heaterl => comp.e0-active.in1
net e0.active  <= comp.e0-active.out

# PID parameters
#setp pid.e0-temp.FF0      0
#setp pid.e0-temp.FF1      0
#setp pid.e0-temp.FF2      0
setp pid.e0-temp.Pgain     [EXTRUDER_0]PID_PGAIN
setp pid.e0-temp.Igain     [EXTRUDER_0]PID_IGAIN
setp pid.e0-temp.Dgain     [EXTRUDER_0]PID_DGAIN
setp pid.e0-temp.maxerrorI [EXTRUDER_0]PID_MAXERRORI
setp pid.e0-temp.bias      [EXTRUDER_0]PID_BIAS

# Parameters
sets e0.temp.range.pos_error   [EXTRUDER_0]TEMP_RANGE_POS_ERROR
sets e0.temp.range.neg_error   [EXTRUDER_0]TEMP_RANGE_NEG_ERROR
sets e0.temp.range.lowpassgain [EXTRUDER_0]TEMP_RANGE_LOWPASSGAIN
sets e0.temp.limit.min         [EXTRUDER_0]TEMP_LIMIT_MIN
sets e0.temp.limit.max         [EXTRUDER_0]TEMP_LIMIT_MAX

setp thermistor-check.e0.wait 9.0
setp thermistor-check.e0.min-pid 0.25
setp thermistor-check.e0.min-temp 1.5


# Bed temperature control
# ----------------------------------------------------------------------------
newsig hbp.temp.set              float
newsig hbp.temp.meas             float
newsig hbp.temp.range.pos_error  float
newsig hbp.temp.range.neg_error  float
newsig hbp.temp.range.max        float
newsig hbp.temp.range.min        float
newsig hbp.temp.in-range         bit
newsig hbp.temp.pwm              float
newsig hbp.temp.pwm.max          float
newsig hbp.temp.limit.min        float
newsig hbp.temp.limit.max        float
newsig hbp.temp.in-limit         bit
newsig hbp.therm-ok              bit
newsig hbp.no-error              bit
newsig hbp.active                bit

# PID
net emcmot.00.enable => pid.hbp-temp.enable
net hbp.temp.meas    => pid.hbp-temp.feedback
net hbp.temp.set     => pid.hbp-temp.command
net hbp.heater       <= pid.hbp-temp.output
net hbp.heater       => limit1.hbp-heater.in
net hbp.heaterl      <= limit1.hbp-heater.out

# Limit heater PWM to positive values
# PWM mimics hm2 implementation, which generates output for negative values
setp limit1.hbp-heater.min 0
setp limit1.hbp-heater.max [HBP]PWM_MAX
net hbp.temp.pwm.max => pid.hbp-temp.maxoutput
sets hbp.temp.pwm.max [HBP]PWM_MAX

# Temperature checking
net hbp.temp.set              => sum2.hbp-temp-range-pos.in0
net hbp.temp.range.pos_error  => sum2.hbp-temp-range-pos.in1
net hbp.temp.set              => sum2.hbp-temp-range-neg.in0
net hbp.temp.range.neg_error  => sum2.hbp-temp-range-neg.in1

net hbp.temp.range.min sum2.hbp-temp-range-neg.out => wcomp.hbp-temp-range.min
net hbp.temp.range.max sum2.hbp-temp-range-pos.out => wcomp.hbp-temp-range.max
net hbp.temp.meas                 => wcomp.hbp-temp-range.in
#the output of wcomp.e0-temp-range will say if measured temperature is in range of set value
#this needs to be coupled to a digital input for M66 readout
net hbp.temp.in-range <= wcomp.hbp-temp-range.out

# limit the output temperature to prevent damage when thermistor is broken/removed
net hbp.temp.limit.min         => wcomp.hbp-temp-limit.min
net hbp.temp.limit.max         => wcomp.hbp-temp-limit.max
net hbp.temp.meas              => wcomp.hbp-temp-limit.in
net hbp.temp.in-limit          <= wcomp.hbp-temp-limit.out

# check the thermistor
net hbp.temp.meas              => thermistor-check.hbp.temp
net hbp.temp.in-range          => not.hbp-temp-range.in
net hbp.temp.in-range_n        <= not.hbp-temp-range.out
net hbp.temp.in-range_n        => thermistor-check.hbp.enable
net hbp.heaterl                => thermistor-check.hbp.pid
net hbp.therm-ok               <= thermistor-check.hbp.no-error

# no error chain
net hbp.therm-ok => and2.hbp-no-error.in0
net hbp.temp.in-limit => and2.hbp-no-error.in1
net hbp.no-error <= and2.hbp-no-error.out

setp comp.hbp-active.in0 0.0001
setp comp.hbp-active.hyst 0.0
net hbp.heaterl => comp.hbp-active.in1
net hbp.active  <= comp.hbp-active.out

# PID parameters
#setp pid.hbp-temp.FF0      0
#setp pid.hbp-temp.FF1      0
#setp pid.hbp-temp.FF2      0
setp pid.hbp-temp.Pgain     [HBP]PID_PGAIN
setp pid.hbp-temp.Igain     [HBP]PID_IGAIN
setp pid.hbp-temp.Dgain     [HBP]PID_DGAIN
setp pid.hbp-temp.maxerrorI [HBP]PID_MAXERRORI
setp pid.hbp-temp.bias      [HBP]PID_BIAS

# Parameters
sets hbp.temp.range.pos_error [HBP]TEMP_RANGE_POS_ERROR
sets hbp.temp.range.neg_error [HBP]TEMP_RANGE_NEG_ERROR
sets hbp.temp.limit.min       [HBP]TEMP_LIMIT_MIN
sets hbp.temp.limit.max       [HBP]TEMP_LIMIT_MAX

setp thermistor-check.hbp.wait 18.0
setp thermistor-check.hbp.min-pid 0.3
setp thermistor-check.hbp.min-temp 1.5


# PIDctrl
#net pid.Pgain       pidctrl.Pgain => pid.e0-temp.Pgain
#net pid.Igain       pidctrl.Igain => pid.e0-temp.Igain
#net pid.Dgain       pidctrl.Dgain => pid.e0-temp.Dgain
#net pid.maxerrorI   pidctrl.maxerrorI => pid.e0-temp.maxerrorI
#net pid.bias        pidctrl.bias => pid.e0-temp.bias
#net e0.temp.meas => pidctrl.feedback
#net e0.heater =>    pidctrl.output

# ##################################################
# Extruder Multiplexer
# ##################################################
newsig e0.enable bit
newsig e1.enable bit
newsig e2.enable bit
newsig e3.enable bit
newsig extruder.sel s32

net e0.enable <= select8.extruder.out0
net e1.enable <= select8.extruder.out1
net e2.enable <= select8.extruder.out2
net e3.enable <= select8.extruder.out3
net extruder.sel => select8.extruder.sel
sets extruder.sel 0

# ##################################################
# RGBW LED
# ##################################################

newsig l0.r           float
newsig l0.g           float
newsig l0.b           float
newsig l0.w           float
newsig l0.r-out       float
newsig l0.g-out       float
newsig l0.b-out       float
newsig l0.w-out       float

net l0.r-out <= led-dim.l0-r.output
net l0.g-out <= led-dim.l0-g.output
net l0.b-out <= led-dim.l0-b.output
net l0.w-out <= led-dim.l0-w.output

net l0.r => led-dim.l0-r.input
net l0.g => led-dim.l0-g.input
net l0.b => led-dim.l0-b.input
net l0.w => led-dim.l0-w.input

setp led-dim.l0-r.factor 5.0
setp led-dim.l0-r.steps  256
setp led-dim.l0-r.max-pwm 4095
setp led-dim.l0-g.factor 5.0
setp led-dim.l0-g.steps  256
setp led-dim.l0-g.max-pwm 4095
setp led-dim.l0-b.factor 5.0
setp led-dim.l0-b.steps  256
setp led-dim.l0-b.max-pwm 4095
setp led-dim.l0-w.factor 5.0
setp led-dim.l0-w.steps  256
setp led-dim.l0-w.max-pwm 4095

# ##################################################
# HB LED
# ##################################################
newsig l0.hbp-info bit
newsig l0.hbp-hot bit

setp comp.hbp-hot.in0 50.0
setp comp.hbp-hot.hyst 2.0
net hbp.temp.meas => comp.hbp-hot.in1
net l0.hbp-hot <= comp.hbp-hot.out

# ##################################################
# Fans
# ##################################################

# F0
# ---------------------------
newsig f0.set           float
newsig f0.pwm           float
# ---------------------------
setp scale.f0.gain 0.00392156862745
net f0.set => scale.f0.in
net f0.pwm <= scale.f0.out

# F1
# ---------------------------
newsig f1.set           float
newsig f1.pwm           float
# ---------------------------
setp scale.f1.gain 0.00392156862745
net f1.set => scale.f1.in
net f1.pwm <= scale.f1.out

# F2
# ---------------------------
newsig f2.set           float
newsig f2.pwm           float
# ---------------------------
setp scale.f2.gain 0.00392156862745
net f2.set => scale.f2.in
net f2.pwm <= scale.f2.out

# F3
# ---------------------------
newsig f3.set           float
newsig f3.pwm           float
# ---------------------------
setp scale.f3.gain 0.00392156862745
net f3.set => scale.f3.in
net f3.pwm <= scale.f3.out

# Hotend Fan
# --------------------------
newsig exp0.fan.pwm    float
newsig exp0.fan.enable bit
# --------------------------
setp mux2.exp0-pwm.in0 0.0
setp mux2.exp0-pwm.in1 1.0
setp comp.exp0-temp.in0 50.0
setp comp.exp0-temp.hyst 2.0
net e0.temp.meas => comp.exp0-temp.in1
net exp0.fan.pwm <= mux2.exp0-pwm.out
net exp0.fan.enable <= comp.exp0-temp.out
net exp0.fan.enable => mux2.exp0-pwm.sel

# ##################################################
# PWM
# ##################################################

# Bed Heater
setp i2c-pwm.out-00.enable 1
setp i2c-pwm.out-00.value  0.0
net hbp.heaterl => i2c-pwm.out-00.value

# E0 Heater
setp i2c-pwm.out-01.enable 1
setp i2c-pwm.out-01.value  0.0
net e0.heaterl => i2c-pwm.out-01.value

# E1 Heater
setp i2c-pwm.out-02.enable 1
setp i2c-pwm.out-02.value  0.0

# E2 Heater
setp i2c-pwm.out-03.enable 1
setp i2c-pwm.out-03.value  0.0

# E3 Heater
setp i2c-pwm.out-04.enable 1
setp i2c-pwm.out-04.value  0.0

# F0
setp i2c-pwm.out-05.enable 1
setp i2c-pwm.out-05.value  0.0
net f0.pwm => i2c-pwm.out-05.value

# F1
setp i2c-pwm.out-06.enable 1
setp i2c-pwm.out-06.value  0.0
net f1.pwm => i2c-pwm.out-06.value

# F2
setp i2c-pwm.out-07.enable 1
setp i2c-pwm.out-07.value  0.0
net f2.pwm => i2c-pwm.out-07.value

# F3
setp i2c-pwm.out-08.enable 1
setp i2c-pwm.out-08.value  0.0
net f3.pwm => i2c-pwm.out-08.value

# Exp0
setp i2c-pwm.out-09.enable 1
setp i2c-pwm.out-09.value  0.0
net exp0.fan.pwm => i2c-pwm.out-09.value

# Exp1
setp i2c-pwm.out-10.enable 1
setp i2c-pwm.out-10.value  0.0

# LED-R
setp i2c-pwm.out-11.enable 1
setp i2c-pwm.out-11.value  0.0
net l0.r-out => i2c-pwm.out-11.value

# LED-G
setp i2c-pwm.out-12.enable 1
setp i2c-pwm.out-12.value  0.0
net l0.g-out => i2c-pwm.out-12.value

# LED-B
setp i2c-pwm.out-13.enable 1
setp i2c-pwm.out-13.value  0.0
net l0.b-out => i2c-pwm.out-13.value

# LED-W
setp i2c-pwm.out-14.enable 1
setp i2c-pwm.out-14.value  0.0
net l0.w-out => i2c-pwm.out-14.value

# PWM0
setp i2c-pwm.out-15.enable 1
setp i2c-pwm.out-15.value  0.0

setp i2c-pwm.frequency 1000

# ##################################################
# GPIO
# ##################################################
newsig pwr-mon bit
newsig hbp-mon  bit

net limit-x-home  <= i2c-gpio.A.in-00
net limit-y-home  <= i2c-gpio.A.in-01
net limit-zr-home <= i2c-gpio.A.in-02
net limit-zl-home <= i2c-gpio.A.in-03
net probe.signal  <= i2c-gpio.A.in-04
#net sensor1       <= i2c-gpio.A.in-05
#net sensor2       <= i2c-gpio.A.in-06
#net sensor3       <= i2c-gpio.A.in-07
net e0.enable     => i2c-gpio.B.out-00
net e1.enable     => i2c-gpio.B.out-01
net e2.enable     => i2c-gpio.B.out-02
net e3.enable     => i2c-gpio.B.out-03
net l0.hbp-info   => i2c-gpio.B.out-04
net l0.hbp-hot    => i2c-gpio.B.out-05
net pwr-mon       <= i2c-gpio.B.in-06
net hbp-mon       <= i2c-gpio.B.in-07

# Adjust as needed for your switch polarity
setp i2c-gpio.A.in-00.invert 1
setp i2c-gpio.A.in-01.invert 1
setp i2c-gpio.A.in-02.invert 1
setp i2c-gpio.A.in-03.invert 1
setp i2c-gpio.A.in-04.invert 1
setp i2c-gpio.A.in-05.invert 1
setp i2c-gpio.A.in-06.invert 1
setp i2c-gpio.A.in-07.invert 1
setp i2c-gpio.B.out-00.invert 0
setp i2c-gpio.B.out-01.invert 0
setp i2c-gpio.B.out-02.invert 0
setp i2c-gpio.B.out-03.invert 0
setp i2c-gpio.B.out-04.invert 0
setp i2c-gpio.B.out-05.invert 0
setp i2c-gpio.B.in-06.invert 0
setp i2c-gpio.B.in-07.invert 0

# Enable pullup for mechanical endstops
setp i2c-gpio.A.in-00.pullup 1
setp i2c-gpio.A.in-01.pullup 1
setp i2c-gpio.A.in-02.pullup 1
setp i2c-gpio.A.in-03.pullup 1
setp i2c-gpio.A.in-04.pullup 1
setp i2c-gpio.A.in-05.pullup 0
setp i2c-gpio.A.in-06.pullup 0
setp i2c-gpio.A.in-07.pullup 0
setp i2c-gpio.B.in-06.pullup 0
setp i2c-gpio.B.in-07.pullup 0

# ##################################################
# ADC
# ##################################################
net hbp.temp.meas        <= i2c-temp.ch-00.value
net e0.temp.meas         <= i2c-temp.ch-01.value
#net e1.temp.meas        <= i2c-temp.ch-02.value
#net e2.temp.meas        <= i2c-temp.ch-03.value
#net e3.temp.meas        <= i2c-temp.ch-04.value
#net ain0                <= i2c-temp.ch-05.value
#net ain1                <= i2c-temp.ch-06.value
#net ain2                <= i2c-temp.ch-07.value

# ##################################################
# Motion AIO and DIO
# ##################################################

net hbp.temp.set-program <= motion.analog-out-00
#net hbc.temp.set-program <= motion.analog-out-01
net e0.temp.set-program  <= motion.analog-out-02
net f0.set-program       <= motion.analog-out-12
net f1.set-program       <= motion.analog-out-13
net f2.set-program       <= motion.analog-out-14
net f3.set-program       <= motion.analog-out-15
net l0.r-program         <= motion.analog-out-26
net l0.g-program         <= motion.analog-out-27
net l0.b-program         <= motion.analog-out-28
net l0.w-program         <= motion.analog-out-29
net probe.sel-f          <= motion.analog-out-38
net p0.x-program         <= motion.analog-out-43
net p0.y-program         <= motion.analog-out-44
net p1.x-program         <= motion.analog-out-45
net p1.y-program         <= motion.analog-out-46
net p2.x-program         <= motion.analog-out-47
net p2.y-program         <= motion.analog-out-48
net p3.x-program         <= motion.analog-out-49
net p3.y-program         <= motion.analog-out-50

net hbp.temp.set-trigger <= motion.digital-out-00
#net hbc.temp.set-trigger <= motion.digital-out-01
net e0.temp.set-trigger  <= motion.digital-out-02
net f0.set-trigger       <= motion.digital-out-12
net f1.set-trigger       <= motion.digital-out-13
net f2.set-trigger       <= motion.digital-out-14
net f3.set-trigger       <= motion.digital-out-15
net l0.r-trigger         <= motion.digital-out-26
net l0.g-trigger         <= motion.digital-out-27
net l0.b-trigger         <= motion.digital-out-28
net l0.w-trigger         <= motion.digital-out-29
net probe.enable         <= motion.digital-out-38
net p0.x-trigger         <= motion.digital-out-43
net p0.y-trigger         <= motion.digital-out-44
net p1.x-trigger         <= motion.digital-out-45
net p1.y-trigger         <= motion.digital-out-46
net p2.x-trigger         <= motion.digital-out-47
net p2.y-trigger         <= motion.digital-out-48
net p3.x-trigger         <= motion.digital-out-49
net p3.y-trigger         <= motion.digital-out-50

net hbp.temp.meas        => motion.analog-in-00
#net hbc.temp.meas        => motion.analog-in-01
net e0.temp.meas         => motion.analog-in-02
net f0.set               => motion.analog-in-12
net f1.set               => motion.analog-in-13
net f2.set               => motion.analog-in-14
net f3.set               => motion.analog-in-15
net l0.r                 => motion.analog-in-26
net l0.g                 => motion.analog-in-27
net l0.b                 => motion.analog-in-28
net l0.w                 => motion.analog-in-29
net p0.x                 => motion.analog-in-43
net p0.y                 => motion.analog-in-44
net p1.x                 => motion.analog-in-45
net p1.y                 => motion.analog-in-46
net p2.x                 => motion.analog-in-47
net p2.y                 => motion.analog-in-48
net p3.x                 => motion.analog-in-49
net p3.y                 => motion.analog-in-50

net hbp.temp.in-range   => motion.digital-in-00
#net hbc.temp.in-range   => motion.digital-in-01
net e0.temp.in-range    => motion.digital-in-02

net hbp.temp.set-program => in2io-motion.in.00
net hbp.temp.set-trigger => in2io-motion.trigger.00
net hbp.temp.set         <= in2io-motion.io.00
#net hbc.temp.set-program => in2io-motion.in.01
#net hbc.temp.set-trigger => in2io-motion.trigger.01
#net hbc.temp.set         <= in2io-motion.io.01
net e0.temp.set-program => in2io-motion.in.02
net e0.temp.set-trigger => in2io-motion.trigger.02
net e0.temp.set         <= in2io-motion.io.02
net f0.set-program      => in2io-motion.in.12
net f0.set-trigger      => in2io-motion.trigger.12
net f0.set              <= in2io-motion.io.12
net f1.set-program      => in2io-motion.in.13
net f1.set-trigger      => in2io-motion.trigger.13
net f1.set              <= in2io-motion.io.13
net f2.set-program      => in2io-motion.in.14
net f2.set-trigger      => in2io-motion.trigger.14
net f2.set              <= in2io-motion.io.14
net f3.set-program      => in2io-motion.in.15
net f3.set-trigger      => in2io-motion.trigger.15
net f3.set              <= in2io-motion.io.15
net l0.r-program        => in2io-motion.in.26
net l0.r-trigger        => in2io-motion.trigger.26
net l0.r                <= in2io-motion.io.26
net l0.g-program        => in2io-motion.in.27
net l0.g-trigger        => in2io-motion.trigger.27
net l0.g                <= in2io-motion.io.27
net l0.b-program        => in2io-motion.in.28
net l0.b-trigger        => in2io-motion.trigger.28
net l0.b                <= in2io-motion.io.28
net l0.w-program        => in2io-motion.in.29
net l0.w-trigger        => in2io-motion.trigger.29
net l0.w                <= in2io-motion.io.29
net p0.x-program        => in2io-motion.in.43
net p0.x-trigger        => in2io-motion.trigger.43
net p0.x                <= in2io-motion.io.43
net p0.y-program        => in2io-motion.in.44
net p0.y-trigger        => in2io-motion.trigger.44
net p0.y                <= in2io-motion.io.44
net p1.x-program        => in2io-motion.in.45
net p1.x-trigger        => in2io-motion.trigger.45
net p1.x                <= in2io-motion.io.45
net p1.y-program        => in2io-motion.in.46
net p1.y-trigger        => in2io-motion.trigger.46
net p1.y                <= in2io-motion.io.46
net p2.x-program        => in2io-motion.in.47
net p2.x-trigger        => in2io-motion.trigger.47
net p2.x                <= in2io-motion.io.47
net p2.y-program        => in2io-motion.in.48
net p2.y-trigger        => in2io-motion.trigger.48
net p2.y                <= in2io-motion.io.48
net p3.x-program        => in2io-motion.in.49
net p3.x-trigger        => in2io-motion.trigger.49
net p3.x                <= in2io-motion.io.49
net p3.y-program        => in2io-motion.in.50
net p3.y-trigger        => in2io-motion.trigger.50
net p3.y                <= in2io-motion.io.50

# ##################################################
# Estop chain, watchdog and charge-pump
# ##################################################
net estop-user          => estopchain.in-00
net e0.temp.in-limit    => estopchain.in-01
net e0.therm-ok         => estopchain.in-02
net hbp.temp.in-limit   => estopchain.in-03
net hbp.therm-ok        => estopchain.in-04
net gpio-ok             => estopchain.in-05
net pwm-ok              => estopchain.in-06
net temp-ok             => estopchain.in-07
net estop-out           <= estopchain.and

# TODO watchdog

net gpio-watchdog => watchdog.input-0
setp watchdog.timeout-0 0.1
net pwm-watchdog => watchdog.input-1
setp watchdog.timeout-1 0.2
net temp-watchdog => watchdog.input-2
setp watchdog.timeout-2 0.1
net estop-out => watchdog.enable-in

# drive estop-sw
#net charge-pump-out charge-pump.out => bb_gpio.p8.out-19
#net estop-out => charge-pump.enable
net estop-out => bb_gpio.p8.out-19
setp bb_gpio.p8.out-19.invert 1

# ##################################################
# UI linking
# ##################################################

net hbp.temp.meas       => fdm-hbp.temp.meas
net hbp.temp.set       <=> fdm-hbp.temp.set
net hbp.temp.limit.min  => fdm-hbp.temp.limit.min
net hbp.temp.limit.max  => fdm-hbp.temp.limit.max
net hbp.temp.in-range   => fdm-hbp.temp.in-range
net hbp.no-error        => fdm-hbp.no-error
net hbp.active          => fdm-hbp.active
net e0.temp.meas        => fdm-e0.temp.meas
net e0.temp.set        <=> fdm-e0.temp.set
net e0.temp.limit.min   => fdm-e0.temp.limit.min
net e0.temp.limit.max   => fdm-e0.temp.limit.max
net e0.temp.in-range    => fdm-e0.temp.in-range
net e0.no-error         => fdm-e0.no-error
net e0.active           => fdm-e0.active
net f0.set             <=> fdm-f0.set
net f1.set             <=> fdm-f1.set
net f2.set             <=> fdm-f2.set
net f3.set             <=> fdm-f3.set
net l0.r               <=> fdm-l0.r
net l0.g               <=> fdm-l0.g
net l0.b               <=> fdm-l0.b
net l0.w               <=> fdm-l0.w

# monitor the estop error sources
newg error-sources 100
newm error-sources estop-user
newm error-sources gpio-ok
newm error-sources pwm-ok
newm error-sources temp-ok
newm error-sources e0.temp.in-limit
newm error-sources e0.therm-ok
newm error-sources hbp.temp.in-limit
newm error-sources hbp.therm-ok

# ##################################################
# Storage
# ##################################################

net l0.r               <=> storage.l0.r
net l0.g               <=> storage.l0.g
net l0.b               <=> storage.l0.b
net l0.w               <=> storage.l0.w
net home-offset-zr     <=> storage.gantry.home-offset-zr
net home-offset-zl     <=> storage.gantry.home-offset-zl

setp storage.read-trigger 1 # trigger read
