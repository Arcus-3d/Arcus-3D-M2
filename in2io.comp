 
/******************************************************************************
 *
 * Copyright (C) 2014 Alexander RÃ¶ssler
 *
 *
 * This module allows dimming LEDs using HAL
 *
 ******************************************************************************
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
 * 02110-1301, USA.
 *
 * THE AUTHORS OF THIS PROGRAM ACCEPT ABSOLUTELY NO LIABILITY FOR
 * ANY HARM OR LOSS RESULTING FROM ITS USE.  IT IS _EXTREMELY_ UNWISE
 * TO RELY ON SOFTWARE ALONE FOR SAFETY.  Any machinery capable of
 * harming persons must have provisions for completely removing power
 * from all motors, etc, before persons enter any danger area.  All
 * machinery must be designed to comply with local and national safety
 * codes, and the authors of this software can not, and do not, take
 * any responsibility for such compliance.
 *
 * This code was written as part of the LinuxCNC project.  For more
 * information, go to www.linuxcnc.org.
 *
 ******************************************************************************/

component in2io "LinuxCNC HAL component for coverting a input to a IO pin";
pin in  float   in.## [64 : personality] "Input";
pin io  float   io.## [64 : personality] "I/O";
pin in  bit     trigger.## [64 : personality] "Trigger for updating the input value";
function _  fp "Update the output value";
description """
LinuxCNC HAL component for coverting a input to a IO pin
.LP
input is output
""";
license "GPL";
variable int prev_trigger[64] = 0;
;;

FUNCTION(_) {
    int i;

    for (i = 0; i < personality; i++) {
        if (trigger(i) ^ prev_trigger[i]) {
            io(i) = in(i);
            prev_trigger[i] = trigger(i);
        }
    }
}
